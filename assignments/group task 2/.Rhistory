# Function to calculate percentages and format data
calculate_percentage <- function(data, column_name) {
data <- as.data.frame(table(data[[column_name]]))
data$Percentage = data$Freq / sum(data$Freq) * 100
colnames(data) <- c("Income", "Frequency", "Percentage")
data <- data[order(factor(data$Income, levels = income_levels)), ]
return(data)
}
# Calculate percentage data for all patients
Income_Data <- calculate_percentage(Patient_Data, "Client_Income")
# Calculate percentage data for Home Care patients
HomeCare_Income <- Patient_Data %>%
filter(Facility_Type == "Home-care") %>%
calculate_percentage("Client_Income")
# Calculate percentage data for Inpatient patients
In_patient_Income <- Patient_Data %>%
filter(Facility_Type == "Inpatient") %>%
calculate_percentage("Client_Income")
# Function to create bar graph with percentage labels
create_percentage_bar_graph <- function(data, y_col) {
ggplot(data, aes(x = Income, y = Percentage, fill = Income)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(x = "Client Income", y = y_col, title = paste("Percentage of", y_col, "by Client Income")) +
scale_y_continuous(breaks = seq(0, 100, 10)) +
theme_minimal() +
geom_text(aes(label = sprintf("%.1f%%", Percentage)), hjust = -0.1)
}
#  Create the plots
plot_all_patients <- create_percentage_bar_graph(Income_Data, "Patients")
plot_homecare <- create_percentage_bar_graph(HomeCare_Income, "HomeCare Patients")
plot_inpatient <- create_percentage_bar_graph(In_patient_Income, "InPatient Patients")
# Arrange the plots using ggarrange
ggarrange(plot_all_patients, plot_homecare, plot_inpatient,
labels = c("A", "B", "C"),
ncol = 1, nrow = 3)
Patient_Data = Patient_Data %>%
mutate(Client_Household = str_replace_all(Client_Household, "2to4", "2 to 4"))
corr_data = data.frame(income = Patient_Data$Client_Income,household = Patient_Data$Client_Household)
table(corr_data)
corr_data = corr_data %>% mutate(
household = str_replace_all(household, ">7", "5<"),
household = str_replace_all(household, "5 to 7", "5<"),
household = str_replace_all(household, "1", "1 to 4"),
household = str_replace_all(household, "2 to 4", "1 to 4"),
income = str_replace_all(income, "<50,000", "0-100,000"),
income = str_replace_all(income, "50,000-100,000", "0-100,000"),
)
corr_data = na.omit(corr_data)
table(corr_data)
table(corr_data)[-c(3, 4), ]
corr_data = corr_data[corr_data$income %in% c(">500,000", " 0-100,000 ", "201,000-300,000 ", "301,000-500,000"),]
chisq.test(corr_data$income, corr_data$household)
library(vcd)
mosaicplot(table(corr_data), main = "Mosaic Plot of Client Income vs. Household Size", color = c("red", "blue"))
Patient_Data = Patient_Data %>%
mutate(Alcohol = ifelse(Alcohol %in% c("Often", "More often", "Less extent"), "Others", Alcohol))
Patient_Data$Alcohol[1:10]
Patient_Data$Length_Separated = factor(Patient_Data$Length_Separated, levels = c("<6m", "1<3", "3<5", "More than 5 years"))
HomeCare_data = Patient_Data %>% filter(Facility_Type == "Home-care")
InPatient_data = Patient_Data %>% filter(Facility_Type == "Inpatient")
library(survival)
cox_regression = function(data, response){
form = as.formula(paste("Surv(duration, event_observed) ~", response))
rex_cox =  coxph(formula = form, data = data)
return(summary(rex_cox))
}
print("cox regression for ALL PATIENTS Client Income")
cox_regression(Patient_Data, "Client_Income")
print("cox regression for IN-PATIENTS Client Income")
cox_regression(InPatient_data, "Client_Income")
print("cox regression for HOMECARE PATIENTS Client Income")
cox_regression(HomeCare_data, "Client_Income")
cox_regression(Patient_Data, "Client_Education")
cox_regression(InPatient_data, "Client_Education")
cox_regression(HomeCare_data, "Client_Education")
as.data.frame(table(Patient_Data$Length_Separated))
cox_regression(Patient_Data, "Length_Separated")
cox_regression(HomeCare_data, "Length_Separated")
cox_regression(InPatient_data, "Length_Separated")
cox_regression(Patient_Data[!is.na(Patient_Data$Alcohol),], "Alcohol")
cox_regression(HomeCare_data[!is.na(HomeCare_data$Alcohol),], "Alcohol")
cox_regression(InPatient_data[!is.na(InPatient_data$Alcohol),], "Alcohol")
as.data.frame(table(Patient_Data$Shift_Taken))
shift_taken = as.data.frame(table(Patient_Data$Shift_Taken)) colnames(shift_taken) = c("shift", "frequency")
shift_by_gender = data.frame(shift = Patient_Data$Shift_Taken,
gender = Patient_Data$Sex_Patient)
all_patient_gender_crosstab= as.data.frame(table(shift_by_gender$gender, shift_by_gender$shift))
all_patient_gender_crosstab
shift_by_gender = data.frame(shift = Patient_Data$Shift_Taken,
gender = Patient_Data$Sex_Patient)
shift_by_gender = na.omit(shift_by_gender)
all_patient_gender_crosstab= as.data.frame(table(shift_by_gender$gender, shift_by_gender$shift))
all_patient_gender_crosstab
shift_by_gender = na.omit(shift_by_gender)
all_patient_gender_crosstab= as.data.frame(table(shift_by_gender$gender, shift_by_gender$shift))
all_patient_gender_crosstab
shift_by_gender = data.frame(shift = Patient_Data$Shift_Taken,
gender = Patient_Data$Sex_Patient)
all_patient_gender_crosstab= as.data.frame(table(shift_by_gender$gender, shift_by_gender$shift))
colnames(all_patient_gender_crosstab) = c("Gender", "Shift", "Count")
all_patient_gender_crosstab = na.omit(all_patient_gender_crosstab)
all_patient_gender_crosstab = all_patient_gender_crosstab[order(all_patient_gender_crosstab$Gender)]
shift_by_gender = data.frame(shift = Patient_Data$Shift_Taken,
gender = Patient_Data$Sex_Patient)
all_patient_gender_crosstab= as.data.frame(table(shift_by_gender$gender, shift_by_gender$shift))
colnames(all_patient_gender_crosstab) = c("Gender", "Shift", "Count")
all_patient_gender_crosstab = na.omit(all_patient_gender_crosstab)
all_patient_gender_crosstab = all_patient_gender_crosstab[order(all_patient_gender_crosstab$Gender), ]
all_patient_gender_crosstab
shift_by_gender = data.frame(shift = Patient_Data$Shift_Taken,
gender = Patient_Data$Sex_Patient)
all_patient_gender_crosstab= as.data.frame(table(shift_by_gender$gender, shift_by_gender$shift))
colnames(all_patient_gender_crosstab) = c("Gender", "Shift", "Count")
all_patient_gender_crosstab =all_patient_gender_crosstab[!is.na(all_patient_gender_crosstab$Gender)]
shift_by_gender = data.frame(shift = Patient_Data$Shift_Taken,
gender = Patient_Data$Sex_Patient)
all_patient_gender_crosstab= as.data.frame(table(shift_by_gender$gender, shift_by_gender$shift))
colnames(all_patient_gender_crosstab) = c("Gender", "Shift", "Count")
all_patient_gender_crosstab =all_patient_gender_crosstab[!is.na(all_patient_gender_crosstab$Gender),]
all_patient_gender_crosstab = all_patient_gender_crosstab[order(all_patient_gender_crosstab$Gender), ]
all_patient_gender_crosstab
shift_by_gender = data.frame(shift = Patient_Data$Shift_Taken,
gender = Patient_Data$Sex_Patient)
all_patient_gender_crosstab= as.data.frame(table(shift_by_gender$gender, shift_by_gender$shift))
colnames(all_patient_gender_crosstab) = c("Gender", "Shift", "Count")
all_patient_gender_crosstab =all_patient_gender_crosstab[!is.na(all_patient_gender_crosstab$Shift),]
all_patient_gender_crosstab = all_patient_gender_crosstab[order(all_patient_gender_crosstab$Gender), ]
all_patient_gender_crosstab
shift_by_gender = data.frame(shift = Patient_Data$Shift_Taken,
gender = Patient_Data$Sex_Patient)
all_patient_gender_crosstab= as.data.frame(table(shift_by_gender$gender, shift_by_gender$shift))
colnames(all_patient_gender_crosstab) = c("Gender", "Shift", "Count")
all_patient_gender_crosstab =all_patient_gender_crosstab[!is.na(as.character(all_patient_gender_crosstab$Shift)),]
all_patient_gender_crosstab = all_patient_gender_crosstab[order(all_patient_gender_crosstab$Gender), ]
all_patient_gender_crosstab
!is.na(as.character(all_patient_gender_crosstab$Shift))
shift_by_gender = Patient_Data %>%
filter(!is.na(Shift_Taken)) %>%
select(Shift_Taken, Sex_Patient)
all_patient_gender_crosstab= as.data.frame(table(shift_by_gender$gender, shift_by_gender$shift))
colnames(all_patient_gender_crosstab) = c("Gender", "Shift", "Count")
View(shift_by_gender)
View(all_patient_gender_crosstab)
shift_by_gender = Patient_Data %>%
filter(!is.na(Shift_Taken)) %>%
select(Shift_Taken, Sex_Patient)
colnames(shift_by_gender) = c("shift", "gender")
all_patient_gender_crosstab= as.data.frame(table(shift_by_gender$gender, shift_by_gender$shift))
colnames(all_patient_gender_crosstab) = c("Gender", "Shift", "Count")
all_patient_gender_crosstab =all_patient_gender_crosstab[!is.na(as.character(all_patient_gender_crosstab$Shift)),]
row.names(all_patient_gender_crosstab) <- NULL
all_patient_gender_crosstab = all_patient_gender_crosstab[order(all_patient_gender_crosstab$Gender), ]
all_patient_gender_crosstab
Patient_Data$Marital
shift_by_gender = Patient_Data %>%
filter(!is.na(Shift_Taken)) %>%
select(Shift_Taken, Sex_Patient)
colnames(shift_by_gender) = c("shift", "gender")
Homecare_shift_by_marital_status = Patient_Data %>%
filter(Facility_Type == "Home-care") %>%
select(Shift_Taken, Marital)
InPatient_shift_by_marital_status = Patient_Data %>%
filter(Facility_Type == "Inpatient") %>%
select(Shift_Taken, Marital)
shift_by_gender = Patient_Data %>%
filter(!is.na(Shift_Taken)) %>%
select(Shift_Taken, Sex_Patient)
colnames(shift_by_gender) = c("shift", "gender")
Homecare_shift_by_gender = Patient_Data %>%
filter(Facility_Type == "Home-care") %>%
select(Shift_Taken, Sex_Patient)
InPatient_shift_by_gender = Patient_Data %>%
filter(Facility_Type == "Inpatient") %>%
select(Shift_Taken, Sex_Patient)
all_patient_gender_crosstab= as.data.frame(table(shift_by_gender$gender, shift_by_gender$shift))
colnames(all_patient_gender_crosstab) = c("Gender", "Shift", "Count")
all_patient_gender_crosstab =all_patient_gender_crosstab[!is.na(as.character(all_patient_gender_crosstab$Shift)),]
row.names(all_patient_gender_crosstab) <- NULL
all_patient_gender_crosstab = all_patient_gender_crosstab[order(all_patient_gender_crosstab$Gender), ]
print("Cross tablulation of all patients")
all_patient_gender_crosstab
inpatient_gender_crosstab= as.data.frame(table(InPatient_shift_by_gender$gender, InPatient_shift_by_gender$shift))
colnames(inpatient_gender_crosstab) = c("Gender", "Shift", "Count")
shift_by_gender = Patient_Data %>%
filter(!is.na(Shift_Taken)) %>%
select(Shift_Taken, Sex_Patient)
colnames(shift_by_gender) = c("shift", "gender")
Homecare_shift_by_gender = Patient_Data %>%
filter(Facility_Type == "Home-care") %>%
select(Shift_Taken, Sex_Patient)
colnames(Homecare_shift_by_gender) = c("shift", "gender")
Homecare_shift_by_gender = Patient_Data %>%
filter(Facility_Type == "Inpatient") %>%
select(Shift_Taken, Sex_Patient)
colnames(Homecare_shift_by_gender) = c("shift", "gender")
inpatient_gender_crosstab= as.data.frame(table(InPatient_shift_by_gender$gender, InPatient_shift_by_gender$shift))
colnames(inpatient_gender_crosstab) = c("Gender", "Shift", "Count")
View(InPatient_shift_by_gender)
View(InPatient_shift_by_marital_status)
inpatient_gender_crosstab= as.data.frame(table(InPatient_shift_by_gender$gender, InPatient_shift_by_gender$shift))
View(inpatient_gender_crosstab)
shift_by_gender = Patient_Data %>%
filter(!is.na(Shift_Taken)) %>%
select(Shift_Taken, Sex_Patient)
colnames(shift_by_gender) = c("shift", "gender")
Homecare_shift_by_gender = Patient_Data %>%
filter(Facility_Type == "Home-care") %>%
select(Shift_Taken, Sex_Patient)
colnames(Homecare_shift_by_gender) = c("shift", "gender")
InPatient_shift_by_gender = Patient_Data %>%
filter(Facility_Type == "Inpatient") %>%
select(Shift_Taken, Sex_Patient)
colnames(InPatient_shift_by_gender) = c("shift", "gender")
inpatient_gender_crosstab= as.data.frame(table(InPatient_shift_by_gender$gender, InPatient_shift_by_gender$shift))
colnames(inpatient_gender_crosstab) = c("Gender", "Shift", "Count")
inpatient_gender_crosstab =inpatient_gender_crosstab[!is.na(as.character(inpatient_gender_crosstab$Shift)),]
row.names(inpatient_gender_crosstab) <- NULL
inpatient_gender_crosstab = inpatient_gender_crosstab[order(inpatient_gender_crosstab$Gender), ]
print("Cross tablulation of in-patients")
inpatient_gender_crosstab
homecare_gender_crosstab= as.data.frame(table(Homecare_shift_by_gender$gender, Homecare_shift_by_gender$shift))
colnames(homecare_gender_crosstab) = c("Gender", "Shift", "Count")
homecare_gender_crosstab =inpatient_gender_crosstab[!is.na(as.character(homecare_gender_crosstab$Shift)),]
row.names(homecare_gender_crosstab) <- NULL
homecare_gender_crosstab = homecare_gender_crosstab[order(homecare_gender_crosstab$Gender), ]
print("Cross tablulation of Home-care patients")
inpatient_gender_crosstab
View(Homecare_shift_by_gender)
homecare_gender_crosstab= as.data.frame(table(Homecare_shift_by_gender$gender, Homecare_shift_by_gender$shift))
colnames(homecare_gender_crosstab) = c("Gender", "Shift", "Count")
homecare_gender_crosstab =inpatient_gender_crosstab[!is.na(as.character(homecare_gender_crosstab$Shift)),]
row.names(homecare_gender_crosstab) <- NULL
homecare_gender_crosstab = homecare_gender_crosstab[order(homecare_gender_crosstab$Gender), ]
print("Cross tablulation of Home-care patients")
homecare_gender_crosstab
homecare_gender_crosstab= as.data.frame(table(Homecare_shift_by_gender$gender, Homecare_shift_by_gender$shift))
colnames(homecare_gender_crosstab) = c("Gender", "Shift", "Count")
homecare_gender_crosstab =inpatient_gender_crosstab[!is.na(as.character(homecare_gender_crosstab$Shift)),]
row.names(homecare_gender_crosstab) <- NULL
homecare_gender_crosstab = homecare_gender_crosstab[order(homecare_gender_crosstab$Gender), ]
print("Cross tablulation of Home-care patients")
homecare_gender_crosstab
create_crosstab <- function(data, shift_col, gender_col, facility_col) {
# Helper function to process the data
process_data <- function(data, shift_col, gender_col, facility_filter = NULL) {
if (!is.null(facility_filter)) {
data <- data %>% filter(!!sym(facility_col) == facility_filter)
}
data <- data %>%
filter(!is.na(!!sym(shift_col))) %>%
select(!!sym(shift_col), !!sym(gender_col))
colnames(data) <- c("shift", "gender")
return(data)
}
# Process data for all patients
shift_by_gender <- process_data(data, shift_col, gender_col)
# Process data for home-care patients
Homecare_shift_by_gender <- process_data(data, shift_col, gender_col, "Home-care")
# Process data for inpatient patients
InPatient_shift_by_gender <- process_data(data, shift_col, gender_col, "Inpatient")
# Create cross-tabulations
all_patient_gender_crosstab <- as.data.frame(table(shift_by_gender$gender, shift_by_gender$shift))
colnames(all_patient_gender_crosstab) <- c("Gender", "Shift", "Count")
all_patient_gender_crosstab <- all_patient_gender_crosstab[order(all_patient_gender_crosstab$Gender), ]
homecare_gender_crosstab <- as.data.frame(table(Homecare_shift_by_gender$gender, Homecare_shift_by_gender$shift))
colnames(homecare_gender_crosstab) <- c("Gender", "Shift", "Count")
homecare_gender_crosstab <- homecare_gender_crosstab[order(homecare_gender_crosstab$Gender), ]
inpatient_gender_crosstab <- as.data.frame(table(InPatient_shift_by_gender$gender, InPatient_shift_by_gender$shift))
colnames(inpatient_gender_crosstab) <- c("Gender", "Shift", "Count")
inpatient_gender_crosstab <- inpatient_gender_crosstab[order(inpatient_gender_crosstab$Gender), ]
return(list(
all_patients = all_patient_gender_crosstab,
homecare_patients = homecare_gender_crosstab,
inpatient_patients = inpatient_gender_crosstab
))
}
gender_crosstab = create_crosstab(Patient_Data, "Shift_Taken", "Sex_Patient", "Facility_Type")
print("Cross tablulation of in-patients")
gender_crosstab$all_patients
print("Cross tablulation of in-patients")
gender_crosstab$inpatient_patients
gender_crosstab = create_crosstab(Patient_Data, "Shift_Taken", "Sex_Patient", "Facility_Type")
print("Cross tablulation of ALL patients")
gender_crosstab$all_patients
```{r}
### Marital status
```{r}
```{r}
### Marital status
```{r}
```{r}
print("Cross tablulation of Home-care patients")
gender_crosstab$homecare_patients
marital_crosstab =create_crosstab(Patient_Data, "Shift_Taken", "Sex_Patient", "Marital")
marital_crosstab = create_crosstab(Patient_Data, "Shift_Taken", "Marital", "Facility_Type")
print("Cross tablulation of ALL patients")
marital_crosstab$all_patients
print("Cross tablulation of in-patients")
marital_crosstab$inpatient_patients
print("Cross tablulation of Home-care patients")
marital_crosstab$homecare_patients
as.data.frame(as.table(Patient_Data$Patient_Before))
as.data.frame(table(Patient_Data$Patient_Before))
unique(Patient_Data$Patient_Before)
Patient_Data$Patient_Severity
as.data.frame(table(Patient_Data$Patient_Severity))
cox_regression(Patient_Data, "Patient_Severity")
Patient_Data$Current_Condition...18
current_condition_crosstab = create_crosstab(Patient_Data, "Shift_Taken", "Current_Condition...18", "Facility_Type")
current_condition_crosstab$all_patients
create_crosstab <- function(data, shift_col, gender_col, facility_col) {
# Helper function to process the data
process_data <- function(data, shift_col, gender_col, facility_filter = NULL) {
if (!is.null(facility_filter)) {
data <- data %>% filter(!!sym(facility_col) == facility_filter)
}
data <- data %>%
filter(!is.na(!!sym(shift_col))) %>%
select(!!sym(shift_col), !!sym(gender_col))
colnames(data) <- c("shift", "gender")
return(data)
}
# Process data for all patients
shift_by_gender <- process_data(data, shift_col, gender_col)
# Process data for home-care patients
Homecare_shift_by_gender <- process_data(data, shift_col, gender_col, "Home-care")
# Process data for inpatient patients
InPatient_shift_by_gender <- process_data(data, shift_col, gender_col, "Inpatient")
# Create cross-tabulations
all_patient_gender_crosstab <- as.data.frame(table(shift_by_gender$gender, shift_by_gender$shift))
colnames(all_patient_gender_crosstab) <- c(shift_col, "Shift", "Count")
all_patient_gender_crosstab <- all_patient_gender_crosstab[order(all_patient_gender_crosstab$Gender), ]
homecare_gender_crosstab <- as.data.frame(table(Homecare_shift_by_gender$gender, Homecare_shift_by_gender$shift))
colnames(homecare_gender_crosstab) <- c(shift_col, "Shift", "Count")
homecare_gender_crosstab <- homecare_gender_crosstab[order(homecare_gender_crosstab$Gender), ]
inpatient_gender_crosstab <- as.data.frame(table(InPatient_shift_by_gender$gender, InPatient_shift_by_gender$shift))
colnames(inpatient_gender_crosstab) <- c(shift_col, "Shift", "Count")
inpatient_gender_crosstab <- inpatient_gender_crosstab[order(inpatient_gender_crosstab$Gender), ]
return(list(
all_patients = all_patient_gender_crosstab,
homecare_patients = homecare_gender_crosstab,
inpatient_patients = inpatient_gender_crosstab
))
}
create_crosstab <- function(data, shift_col, res_col, facility_col) {
# Helper function to process the data
process_data <- function(data, shift_col, res_col, facility_filter = NULL) {
if (!is.null(facility_filter)) {
data <- data %>% filter(!!sym(facility_col) == facility_filter)
}
data <- data %>%
filter(!is.na(!!sym(shift_col))) %>%
select(!!sym(shift_col), !!sym(res_col))
colnames(data) <- c("shift", "gender")
return(data)
}
# Process data for all patients
shift_by_gender <- process_data(data, shift_col, res_col)
# Process data for home-care patients
Homecare_shift_by_gender <- process_data(data, shift_col, res_col, "Home-care")
# Process data for inpatient patients
InPatient_shift_by_gender <- process_data(data, shift_col, res_col, "Inpatient")
# Create cross-tabulations
all_patient_gender_crosstab <- as.data.frame(table(shift_by_gender$gender, shift_by_gender$shift))
colnames(all_patient_gender_crosstab) <- c(res_col, "Shift", "Count")
all_patient_gender_crosstab <- all_patient_gender_crosstab[order(all_patient_gender_crosstab$Gender), ]
homecare_gender_crosstab <- as.data.frame(table(Homecare_shift_by_gender$gender, Homecare_shift_by_gender$shift))
colnames(homecare_gender_crosstab) <- c(res_col, "Shift", "Count")
homecare_gender_crosstab <- homecare_gender_crosstab[order(homecare_gender_crosstab$Gender), ]
inpatient_gender_crosstab <- as.data.frame(table(InPatient_shift_by_gender$gender, InPatient_shift_by_gender$shift))
colnames(inpatient_gender_crosstab) <- c(res_col, "Shift", "Count")
inpatient_gender_crosstab <- inpatient_gender_crosstab[order(inpatient_gender_crosstab$Gender), ]
return(list(
all_patients = all_patient_gender_crosstab,
homecare_patients = homecare_gender_crosstab,
inpatient_patients = inpatient_gender_crosstab
))
}
current_condition_crosstab = create_crosstab(Patient_Data, "Shift_Taken", "Current_Condition...18", "Facility_Type")
create_crosstab <- function(data, shift_col, res_col, facility_col) {
# Helper function to process the data
process_data <- function(data, shift_col, res_col, facility_filter = NULL) {
if (!is.null(facility_filter)) {
data <- data %>% filter(!!sym(facility_col) == facility_filter)
}
data <- data %>%
filter(!is.na(!!sym(shift_col))) %>%
select(!!sym(shift_col), !!sym(res_col))
colnames(data) <- c("shift", "gender")
return(data)
}
# Process data for all patients
shift_by_gender <- process_data(data, shift_col, res_col)
# Process data for home-care patients
Homecare_shift_by_gender <- process_data(data, shift_col, res_col, "Home-care")
# Process data for inpatient patients
InPatient_shift_by_gender <- process_data(data, shift_col, res_col, "Inpatient")
# Create cross-tabulations
all_patient_gender_crosstab <- as.data.frame(table(shift_by_gender$gender, shift_by_gender$shift))
colnames(all_patient_gender_crosstab) <- c(res_col, "Shift", "Count")
all_patient_gender_crosstab <- all_patient_gender_crosstab[order(all_patient_gender_crosstab[[Gender]]), ]
homecare_gender_crosstab <- as.data.frame(table(Homecare_shift_by_gender$gender, Homecare_shift_by_gender$shift))
colnames(homecare_gender_crosstab) <- c(res_col, "Shift", "Count")
homecare_gender_crosstab <- homecare_gender_crosstab[order(homecare_gender_crosstab[[res_col]]), ]
inpatient_gender_crosstab <- as.data.frame(table(InPatient_shift_by_gender$gender, InPatient_shift_by_gender$shift))
colnames(inpatient_gender_crosstab) <- c(res_col, "Shift", "Count")
inpatient_gender_crosstab <- inpatient_gender_crosstab[order(inpatient_gender_crosstab[[res_col]]), ]
return(list(
all_patients = all_patient_gender_crosstab,
homecare_patients = homecare_gender_crosstab,
inpatient_patients = inpatient_gender_crosstab
))
}
current_condition_crosstab = create_crosstab(Patient_Data, "Shift_Taken", "Current_Condition...18", "Facility_Type")
create_crosstab <- function(data, shift_col, res_col, facility_col) {
# Helper function to process the data
process_data <- function(data, shift_col, res_col, facility_filter = NULL) {
if (!is.null(facility_filter)) {
data <- data %>% filter(!!sym(facility_col) == facility_filter)
}
data <- data %>%
filter(!is.na(!!sym(shift_col))) %>%
select(!!sym(shift_col), !!sym(res_col))
colnames(data) <- c("shift", res_col)
return(data)
}
# Process data for all patients
shift_by_gender <- process_data(data, shift_col, res_col)
# Process data for home-care patients
Homecare_shift_by_gender <- process_data(data, shift_col, res_col, "Home-care")
# Process data for inpatient patients
InPatient_shift_by_gender <- process_data(data, shift_col, res_col, "Inpatient")
# Create cross-tabulations
all_patient_crosstab <- as.data.frame(table(shift_by_gender[[res_col]], shift_by_gender$shift))
colnames(all_patient_crosstab) <- c(res_col, "Shift", "Count")
all_patient_crosstab <- all_patient_crosstab[order(all_patient_crosstab[[Gender]]), ]
homecare_crosstab <- as.data.frame(table(Homecare_shift_by_gender[[res_col]], Homecare_shift_by_gender$shift))
colnames(homecare_crosstab) <- c(res_col, "Shift", "Count")
homecare_crosstab <- homecare_crosstab[order(homecare_crosstab[[res_col]]), ]
inpatient_crosstab <- as.data.frame(table(InPatient_shift_by_gender[[res_col]], InPatient_shift_by_gender$shift))
colnames(inpatient_crosstab) <- c(res_col, "Shift", "Count")
inpatient_crosstab <- inpatient_crosstab[order(inpatient_crosstab[[res_col]]), ]
return(list(
all_patients = all_patient_crosstab,
homecare_patients = homecare_crosstab,
inpatient_patients = inpatient_crosstab
))
}
current_condition_crosstab = create_crosstab(Patient_Data, "Shift_Taken", "Current_Condition...18", "Facility_Type")
current_condition_crosstab = create_crosstab(Patient_Data, "Shift_Taken", "Current_Condition...18", "Facility_Type")
create_crosstab <- function(data, shift_col, res_col, facility_col) {
# Helper function to process the data
process_data <- function(data, shift_col, res_col, facility_filter = NULL) {
if (!is.null(facility_filter)) {
data <- data %>% filter(!!sym(facility_col) == facility_filter)
}
data <- data %>%
filter(!is.na(!!sym(shift_col))) %>%
select(!!sym(shift_col), !!sym(res_col))
colnames(data) <- c("shift", "res")
return(data)
}
# Process data for all patients
shift_by <- process_data(data, shift_col, res_col)
# Process data for home-care patients
Homecare_shift_by <- process_data(data, shift_col, res_col, "Home-care")
# Process data for inpatient patients
InPatient_shift_by <- process_data(data, shift_col, res_col, "Inpatient")
# Create cross-tabulations
all_patient_crosstab <- as.data.frame(table(shift_by$res, shift_by$shift))
colnames(all_patient_crosstab) <- c(res_col, "Shift", "Count")
all_patient_crosstab <- all_patient_crosstab[order(all_patient_crosstab[[res_col]]), ]
homecare_crosstab <- as.data.frame(table(Homecare_shift_by$res, Homecare_shift_by$shift))
colnames(homecare_crosstab) <- c(res_col, "Shift", "Count")
homecare_crosstab <- homecare_crosstab[order(homecare_crosstab[[res_col]]), ]
inpatient_crosstab <- as.data.frame(table(InPatient_shift_by$res, InPatient_shift_by$shift))
colnames(inpatient_crosstab) <- c(res_col, "Shift", "Count")
inpatient_crosstab <- inpatient_crosstab[order(inpatient_crosstab[[res_col]]), ]
return(list(
all_patients = all_patient_crosstab,
homecare_patients = homecare_crosstab,
inpatient_patients = inpatient_crosstab
))
}
current_condition_crosstab = create_crosstab(Patient_Data, "Shift_Taken", "Current_Condition...18", "Facility_Type")
current_condition_crosstab$all_patients
current_condition_crosstab$all_patients %>% filter(Count > 5)
qn40_all_pat = current_condition_crosstab$all_patients %>% filter(Count > 5)
chisq.test(table(qn40_all_pat$Current_Condition...18, qn40_all_pat$Shift))
qn40_all_pat = current_condition_crosstab$all_patients %>% filter(Count > 5)
chisq.test(table(qn40_all_pat))
library(tidyr)
qn40_all_pat = as.table(current_condition_crosstab$all_patients %>% filter(Count > 5) %>% pivot_wider(names_from = Shift, values_from = Count))
qn40_all_pat = current_condition_crosstab$all_patients %>% filter(Count > 5) %>% pivot_wider(names_from = Shift, values_from = Count)
qn40_all_pat
library(tidyr)
qn40_all_pat = as.table(as.matrix(current_condition_crosstab$all_patients %>% filter(Count > 5) %>% pivot_wider(names_from = Shift, values_from = Count)))
chisq.test(table(qn40_all_pat))
qn40_home_pat = as.table(as.matrix(current_condition_crosstab$homecare_patients%>% filter(Count > 5) %>% pivot_wider(names_from = Shift, values_from = Count)))
chisq.test(table(qn40_home_pat))
qn40_home_pat = as.table(as.matrix(current_condition_crosstab$homecare_patients%>% filter(Count > 5) %>% pivot_wider(names_from = Shift, values_from = Count)))
chisq.test(table(qn40_home_pat), suppressWarnings = T)
qn40_home_pat = as.table(as.matrix(current_condition_crosstab$homecare_patients%>% filter(Count > 5) %>% pivot_wider(names_from = Shift, values_from = Count)))
chisq.test(table(qn40_home_pat))
qn40_inpatient_pat = as.table(as.matrix(current_condition_crosstab$inpatient_patients%>% filter(Count > 5) %>% pivot_wider(names_from = Shift, values_from = Count)))
chisq.test(table(qn40_inpatient_pat))
as.table(as.matrix(current_condition_crosstab$inpatient_patients%>% filter(Count > 5) %>% pivot_wider(names_from = Shift, values_from = Count)))
na.omit(as.table(as.matrix(current_condition_crosstab$inpatient_patients%>% filter(Count > 5) %>% pivot_wider(names_from = Shift, values_from = Count))))
as.table(as.matrix(current_condition_crosstab$homecare_patients%>% filter(Count > 5) %>% pivot_wider(names_from = Shift, values_from = Count)))
coxph(Surv(duration, event_observed)~Alcohol, data = Patient_Data))
coxph(Surv(duration, event_observed)~Alcohol, data = Patient_Data)
